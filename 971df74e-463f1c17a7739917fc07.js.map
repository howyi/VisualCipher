{"version":3,"file":"971df74e-463f1c17a7739917fc07.js","mappings":"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","sources":["webpack://visual-cipher/./node_modules/@reactflow/core/dist/esm/index.mjs"],"sourcesContent":["import React, { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (React.createElement(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest }, children));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (React.createElement(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://reactflow.dev/pro\" },\n        React.createElement(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\" }, \"React Flow\")));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (React.createElement(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest },\n        labelShowBg && (React.createElement(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })),\n        React.createElement(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle }, label),\n        children));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }),\n        interactionWidth && (React.createElement(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })),\n        label && isNumeric(labelX) && isNumeric(labelY) ? (React.createElement(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (React.createElement(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getNodesBounds = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n// @deprecated Use `getNodesBounds`.\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    console.warn('[DEPRECATED] `getRectOfNodes` is deprecated. Instead use `getNodesBounds` https://reactflow.dev/api-reference/utils/get-nodes-bounds.');\n    return getNodesBounds(nodes, nodeOrigin);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\n// @deprecated Use `getViewportForBounds`.\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, padding);\n    console.warn('[DEPRECATED] `getTransformForBounds` is deprecated. Instead use `getViewportForBounds`. Beware that the return value is type Viewport (`{ x: number, y: number, zoom: number }`) instead of Transform (`[number, number, number]`). https://reactflow.dev/api-reference/utils/get-viewport-for-bounds');\n    return [x, y, zoom];\n};\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return { x, y, zoom: clampedZoom };\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                const handle = handles.find((h) => h.nodeId === handleNodeId && h.type === handleType && h.id === handleId);\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: handle?.x || pos.x,\n                        y: handle?.y || pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (React.createElement(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest }, children));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n        data?.label,\n        React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (React.createElement(React.Fragment, null,\n    data?.label,\n    React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (React.createElement(React.Fragment, null,\n    React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n    data?.label));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange.forEach((fn) => fn(params));\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return React.createElement(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, nodeDragThreshold, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useDirectStoreUpdater('nodeDragThreshold', nodeDragThreshold, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (React.createElement(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle }, ariaLiveMessage));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style },\n            \"Press enter or space to select a node.\",\n            !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.',\n            \" Press delete to remove it and escape to cancel.\",\n            ' '),\n        React.createElement(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style }, \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"),\n        !disableKeyboardA11y && React.createElement(AriaLiveMessage, { rfId: rfId })));\n}\n\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { actInsideInputWithModifier: true }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        const doc = typeof document !== 'undefined' ? document : null;\n        const target = options?.target || doc;\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            target?.addEventListener('keydown', downHandler);\n            target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                target?.removeEventListener('keydown', downHandler);\n                target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            parentNodes[node.parentNode] = true;\n        }\n        const resetHandleBounds = currInternals?.type && currInternals?.type !== node.type;\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: resetHandleBounds ? undefined : currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getNodesBounds(nodes, nodeOrigin);\n            const { x, y, zoom } = getViewportForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    screenToFlowPosition: (position) => position,\n    flowToScreenPosition: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                // @deprecated Use `screenToFlowPosition`.\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    console.warn('[DEPRECATED] `project` is deprecated. Instead use `screenToFlowPosition`. There is no need to subtract the react flow bounds anymore! https://reactflow.dev/api-reference/types/react-flow-instance#screen-to-flow-position');\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                screenToFlowPosition: (position) => {\n                    const { transform, snapToGrid, snapGrid, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const relativePosition = {\n                        x: position.x - domX,\n                        y: position.y - domY,\n                    };\n                    return pointToRendererPoint(relativePosition, transform, snapToGrid, snapGrid);\n                },\n                flowToScreenPosition: (position) => {\n                    const { transform, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const rendererPosition = rendererPointToPoint(position, transform);\n                    return {\n                        x: rendererPosition.x + domX,\n                        y: rendererPosition.y + domY,\n                    };\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        if (!isRect && !node) {\n            return [null, null, isRect];\n        }\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nconst deleteKeyOptions = { actInsideInputWithModifier: false };\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    const _isMacOs = isMacOs();\n                    // macos sets ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if ((panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(1))) &&\n                    event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) &&\n                    (event.type !== 'wheel' || (panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed))) {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (React.createElement(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle }, children));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\n/**\n * The user selection rectangle gets displayed when a user drags the mouse while pressing shift\n */\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (React.createElement(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle },\n        children,\n        React.createElement(UserSelection, null)));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n        expandParent: n.expandParent,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode && node.extent !== 'parent') {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node], edges: [] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const dragStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getNodesBounds(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            const startDrag = (event) => {\n                const { nodeInternals, multiSelectionActive, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                dragStarted.current = true;\n                const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                    if (!nodeInternals.get(nodeId)?.selected) {\n                        // we need to reset selected nodes when selectNodesOnDrag=false\n                        unselectNodesAndEdges();\n                    }\n                }\n                if (nodeId && isSelectable && selectNodesOnDrag) {\n                    handleNodeClick({\n                        id: nodeId,\n                        store,\n                        nodeRef: nodeRef,\n                    });\n                }\n                const pointerPos = getPointerPosition(event);\n                lastPos.current = pointerPos;\n                dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                if (onStart && dragItems.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onStart(event.sourceEvent, currentNode, nodes);\n                }\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { domNode, nodeDragThreshold } = store.getState();\n                    if (nodeDragThreshold === 0) {\n                        startDrag(event);\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag, nodeDragThreshold } = store.getState();\n                    if (!autoPanStarted.current && dragStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    if (!dragStarted.current) {\n                        const x = pointerPos.xSnapped - (lastPos?.current?.x ?? 0);\n                        const y = pointerPos.ySnapped - (lastPos?.current?.y ?? 0);\n                        const distance = Math.sqrt(x * x + y * y);\n                        if (distance > nodeDragThreshold) {\n                            startDrag(event);\n                        }\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current &&\n                        dragStarted.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    if (!dragStarted.current) {\n                        return;\n                    }\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    dragStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, hasHandleBounds, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            const { nodeDragThreshold } = store.getState();\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            return () => {\n                if (nodeRef.current) {\n                    resizeObserver?.unobserve(nodeRef.current);\n                }\n            };\n        }, []);\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                if (!initialized || !hasHandleBounds) {\n                    // At this point we always want to make sure that the node gets re-measured / re-initialized.\n                    // We need to unobserve it first in case it is still observed\n                    resizeObserver?.unobserve(currNode);\n                    resizeObserver?.observe(currNode);\n                }\n            }\n        }, [hidden, initialized, hasHandleBounds]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel },\n            React.createElement(Provider, { value: id },\n                React.createElement(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }))));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\n/**\n * The nodes selection rectangle gets displayed when a user\n * made a selection with on or several nodes\n */\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getNodesBounds(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (React.createElement(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        } },\n        React.createElement(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } })));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll: _panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const panOnScroll = panActivationKeyPressed || _panOnScroll;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (React.createElement(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName },\n        React.createElement(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode },\n            children,\n            nodesSelectionActive && (React.createElement(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y })))));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (React.createElement(\"div\", { className: \"react-flow__nodes\", style: containerStyle }, nodes.map((node) => {\n        let nodeType = node.type || 'default';\n        if (!props.nodeTypes[nodeType]) {\n            onError?.('003', errorMessages['error003'](nodeType));\n            nodeType = 'default';\n        }\n        const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n        const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n        const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n        const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n        const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n        const clampedPosition = props.nodeExtent\n            ? clampPosition(node.positionAbsolute, props.nodeExtent)\n            : node.positionAbsolute;\n        const posX = clampedPosition?.x ?? 0;\n        const posY = clampedPosition?.y ?? 0;\n        const posOrigin = getPositionWithOrigin({\n            x: posX,\n            y: posY,\n            width: node.width ?? 0,\n            height: node.height ?? 0,\n            origin: props.nodeOrigin,\n        });\n        return (React.createElement(NodeComponent, { key: node.id, id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel, hasHandleBounds: !!node[internalsSymbol]?.handleBounds }));\n    })));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (React.createElement(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url('#${getMarkerId(markerStart, rfId)}')`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url('#${getMarkerId(markerEnd, rfId)}')`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges, unselectNodesAndEdges, multiSelectionActive } = store.getState();\n            const edge = edges.find((e) => e.id === id);\n            if (!edge) {\n                return;\n            }\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                if (edge.selected && multiSelectionActive) {\n                    unselectNodesAndEdges({ nodes: [], edges: [edge] });\n                    edgeRef.current?.blur();\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n            if (onClick) {\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (React.createElement(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef },\n            !updating && (React.createElement(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })),\n            isUpdatable && (React.createElement(React.Fragment, null,\n                (isUpdatable === 'source' || isUpdatable === true) && (React.createElement(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })),\n                (isUpdatable === 'target' || isUpdatable === true) && (React.createElement(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))))));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            fill: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (React.createElement(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\" },\n        React.createElement(Symbol, { color: color, strokeWidth: strokeWidth })));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (React.createElement(\"defs\", null, markers.map((marker) => (React.createElement(Marker, { id: marker.id, key: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient })))));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        edgeTree.map(({ level, edges, isMaxLevel }) => (React.createElement(\"svg\", { key: level, style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\" },\n            isMaxLevel && React.createElement(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }),\n            React.createElement(\"g\", null, edges.map((edge) => {\n                const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                if (!sourceIsValid || !targetIsValid) {\n                    return null;\n                }\n                let edgeType = edge.type || 'default';\n                if (!edgeTypes[edgeType]) {\n                    onError?.('011', errorMessages['error011'](edgeType));\n                    edgeType = 'default';\n                }\n                const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                // when connection type is loose we can define all handles as sources and connect source -> source\n                const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                    ? targetHandleBounds.target\n                    : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                const sourcePosition = sourceHandle?.position || Position.Bottom;\n                const targetPosition = targetHandle?.position || Position.Top;\n                const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                    (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                if (!sourceHandle || !targetHandle) {\n                    onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                    return null;\n                }\n                const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                return (React.createElement(EdgeComponent, { key: edge.id, id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }));\n            }))))),\n        children));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (React.createElement(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform } }, children));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (React.createElement(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return React.createElement(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (React.createElement(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\" },\n        React.createElement(\"g\", { className: cc(['react-flow__connection', connectionStatus]) },\n            React.createElement(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }))));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (React.createElement(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y },\n        React.createElement(Viewport, null,\n            React.createElement(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId },\n                React.createElement(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle })),\n            React.createElement(\"div\", { className: \"react-flow__edgelabel-renderer\" }),\n            React.createElement(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId }))));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    nodeDragThreshold: 0,\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    onSelectionChange: [],\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return React.createElement(Provider$1, { value: storeRef.current }, children);\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(ReactFlowProvider, null, children);\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, nodeDragThreshold, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (React.createElement(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id },\n        React.createElement(Wrapper, null,\n            React.createElement(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }),\n            React.createElement(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection, nodeDragThreshold: nodeDragThreshold }),\n            React.createElement(Wrapper$1, { onSelectionChange: onSelectionChange }),\n            children,\n            React.createElement(Attribution, { proOptions: proOptions, position: attributionPosition }),\n            React.createElement(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y }))));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const nextSelectionChangeHandlers = [...store.getState().onSelectionChange, onChange];\n        store.setState({ onSelectionChange: nextSelectionChangeHandlers });\n        return () => {\n            const nextHandlers = store.getState().onSelectionChange.filter((fn) => fn !== onChange);\n            store.setState({ onSelectionChange: nextHandlers });\n        };\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getNodesBounds, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, getViewportForBounds, handleParentExpand, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"names":["StoreContext","createContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","useContext","Error","useStoreApi","useMemo","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","position","children","className","style","rest","pointerEvents","positionClasses","split","Attribution","proOptions","hideAttribution","href","target","rel","EdgeText$1","memo","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","useRef","edgeTextBbox","setEdgeTextBbox","useState","width","height","edgeTextClasses","useEffect","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","nodeToRect","positionAbsolute","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","isInputDOMNode","event","kbEvent","isReactKeyboardEvent","nativeEvent","composedPath","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","navigator","userAgent","indexOf","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMouseHandler$1","handler","undefined","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","centerY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","offsetX","offsetY","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getSmoothStepPath","borderRadius","offset","points","center","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","sourceGapPoint","targetGapPoint","getPoints","reduce","res","p","i","segment","length","c","size","bendSize","xDir","getBend","SmoothStepEdge","pathOptions","StepEdge","props","StraightEdge","getStraightPath","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","NodeIdContext","Consumer","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","getMarkerId","marker","rfId","Object","keys","sort","key","join","addEdge","edgeParams","some","el","connectionExists","concat","pointToRendererPoint","tx","ty","tScale","snapToGrid","snapX","snapY","round","rendererPointToPoint","getNodePositionWithOrigin","nodeOrigin","getNodesBounds","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","dragging","push","getConnectedEdges","nodeIds","getViewportForBounds","minZoom","maxZoom","padding","xZoom","yZoom","zoom","clampedZoom","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","nodeId","nullConnection","defaultResult","handleDomNode","isValid","connection","endHandle","isValidHandle","handle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleToCheck","querySelector","result","handleType","getHandleType","handleNodeId","getAttribute","handleId","connectable","classList","contains","connectableEnd","Strict","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","connectionRadius","onConnectStart","panBy","getNodes","cancelConnection","closestHandle","autoPanId","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","sourceHandles","targetHandles","getHandleLookup","autoPan","xMovement","yMovement","requestAnimationFrame","onPointerMove","validHandleResult","handles","validator","handleBelow","elementsFromPoint","closestHandles","minDistance","hasValidHandle","hasTargetHandle","getClosestHandle","connectionEndHandle","add","toggle","onPointerUp","onConnectEnd","cancelAnimationFrame","removeEventListener","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","Handle","forwardRef","isConnectable","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","connecting","clickConnecting","state","startHandle","connectionClickStartHandle","clickHandle","connectingSelector","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","setEdges","onPointerDown","button","connectablestart","connectableend","connectionindicator","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","onSelectionChange","fn","changeSelector","Wrapper$1","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","nodeDragThreshold","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","A11yDescriptions","disableKeyboardA11y","useKeyPress","keyCode","options","actInsideInputWithModifier","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","Array","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","shiftKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","k","has","eventCode","calculateXYZPosition","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","zIndex","currInternals","internals","resetHandleBounds","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","isVisible","includeHiddenNodes","optionNode","nodesInitialized","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","screenToFlowPosition","flowToScreenPosition","viewportInitialized","selector$b","useViewportHelper","scaleBy","zoomLevel","scaleTo","nextZoom","console","warn","domX","domY","relativePosition","rendererPosition","useReactFlow","viewportHelper","useCallback","getNode","getEdges","getEdge","payload","nextNodes","nextEdges","addNodes","addEdges","toObject","viewport","deleteElements","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","area","deleteKeyOptions","containerStyle","eventToFlowTransform","eventTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","rendererNode","resizeObserver","updateDimensions","ResizeObserver","observe","unobserve","useResizeHandler","bbox","d3ZoomInstance","scaleExtent","call","updatedTransform","constrainedTransform","constrain","on","this","passive","stopImmediatePropagation","currentZoom","property","_isMacOs","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","sourceEvent","flowTransform","paneDragging","prevViewport","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","handleParentExpand","updateItem","parent","extendWidth","extendHeight","xDiff","yDiff","applyChanges","changes","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","nodesSelectionActive","onWheel","hasActiveSelection","onContextMenu","onMouseEnter","startX","startY","onMouseMove","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","onMouseLeave","isParentSelected","hasSelector","nodeRef","matches","parentElement","getDragItems","from","values","draggable","delta","calcNextPosition","nextPosition","clampedNodeExtent","clampNodeExtent","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","unselect","addSelectedNodes","unselectNodesAndEdges","multiSelectionActive","blur","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","dragStarted","getPointerPosition","pointerPos","xSnapped","ySnapped","useGetPointerPosition","updateNodes","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","updatedPos","onDrag","currentNode","startDrag","onStart","dragHandler","onStop","useUpdateNodePositions","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isDraggable","isFocusable","dragHandle","initialized","ariaLabel","hasHandleBounds","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","updatePositions","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","tabIndex","role","selector$7","transformString","NodesSelection$1","onSelectionContextMenu","focus","preventScroll","selector$6","FlowRenderer","deleteKeyCode","selectionKeyCode","selectionOnDrag","multiSelectionKeyCode","panActivationKeyCode","_panOnScroll","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","deleteKeyPressed","multiSelectionKeyPressed","useGlobalKeyHandler","FlowRenderer$1","createNodeTypes","nodeTypes","input","default","output","group","selector$5","NodeRenderer","onlyRenderVisible","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","focusable","clampedPosition","posX","posY","posOrigin","origin","getPositionWithOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","isUpdatable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","evt","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","addSelectedEdges","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getNodeData","defaultEdgeTree","level","isMaxLevel","useVisibleEdges","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","groupEdgesByZLevel","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","isEdgeVisible","MarkerSymbols","Arrow","color","strokeLinecap","strokeLinejoin","ArrowClosed","Marker","markerUnits","orient","useMarkerSymbol","markerWidth","markerHeight","refX","refY","MarkerDefinitions","defaultColor","markers","ids","markerId","localeCompare","markerSelector","m","MarkerDefinitions$1","selector$4","EdgeRenderer","defaultMarkerColor","onEdgeClick","sourceNodeRect","sourceHandleBounds","sourceIsValid","targetNodeRect","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","sourceHandlePos","targetHandlePos","getEdgePositions","EdgeRenderer$1","selector$3","Viewport","oppositePosition","ConnectionLine","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","component","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","GraphView","onInit","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","rfInstance","isInitialized","useOnInitHandler","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","ReactFlowProvider","storeRef","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","edgesToUnselect","is","Wrapper","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","nodesSelector","useNodes","createUseItemsState","initialItems","setItems","onItemsChange"],"sourceRoot":""}